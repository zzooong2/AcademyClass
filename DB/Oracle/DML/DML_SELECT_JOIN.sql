--JOIN: 두개 이상의 테이블을 모두 조회할 때 사용하는 구문
-- Oracle, ANSI(미국 국립 표준 협회) 두가지



--INNER JOIN: 두 테이블의 공통된 컬럼 값을 기준으로 집합을 반환
--Oracle: FROM절에 테이블 2개, WHERE 절에 조건 기재 
SELECT
	e.DEPARTMENT_ID, e.FIRST_NAME, d.DEPARTMENT_NAME
FROM
	EMPLOYEES e,
	DEPARTMENTS d
WHERE
	e.DEPARTMENT_ID = d.DEPARTMENT_ID;
	
--ANSI: JOIN 명령어 사용(join 할 테이블), ON절에 조건 기재
SELECT
	e.DEPARTMENT_ID,
	e.FIRST_NAME,
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e
JOIN DEPARTMENTS d
ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID;


	
--LEFT OUTER JOIN: 왼쪽 테이블의 모든 행과, 오른쪽 테이블에서 일치하는 행들을 반환
--Oracle: WHERE절의 join 할 테이블 명 옆에 (+) 기재
SELECT
	e.DEPARTMENT_ID,
	e.FIRST_NAME,
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e,
	DEPARTMENTS d
WHERE
	e.DEPARTMENT_ID = d.DEPARTMENT_ID(+);
	
--ANSI: LEFT OUTER JOIN 명령어 사용(join 할 테이블), ON절에 조건 기재
SELECT
	e.EMPLOYEE_ID,
	e.FIRST_NAME,
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e
LEFT OUTER JOIN DEPARTMENTS d
ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID;
	



--RIGHT OUTER JOIN: 오른쪽 테이블의 모든 행과, 왼쪽 테이블에서 일치하는 행들을 반환
--Oracle: WHERE절의 join 할 테이블 명 옆에 (+) 기재
SELECT
	e.DEPARTMENT_ID,
	e.FIRST_NAME,
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e,
	DEPARTMENTS d
WHERE
	e.DEPARTMENT_ID(+) = d.DEPARTMENT_ID;
	
--ASNI: RIGHT OUTER JOIN 명령어 사용(join 할 테이블), ON절에 조건 기재
SELECT
	e.DEPARTMENT_ID,
	e.FIRST_NAME,
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e
RIGHT OUTER JOIN DEPARTMENTS d
ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID;
	
--ASNI: FULL OUTER JOIN 명령어 사용(join 할 테이블), ON절에 조건 기재
SELECT
	e.DEPARTMENT_ID,
	e.FIRST_NAME,
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e
FULL OUTER JOIN DEPARTMENTS d
ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID;


-- 직원 이름, 직무명, 작업이력 출력
SELECT DISTINCT 
	e.FIRST_NAME,
	j.JOB_TITLE,
	jh.START_DATE,
	jh.END_DATE
FROM
	EMPLOYEES e
JOIN JOBS j ON
	e.JOB_ID = j.JOB_ID
JOIN JOB_HISTORY jh ON
	e.EMPLOYEE_ID = jh.EMPLOYEE_ID;



------------------------------------------------------------------------------



--연습예제



--1. INNER JOIN 사용하여 직원 이름, 소속부서 이름 조회하기
SELECT
	FIRST_NAME,
	LAST_NAME,
	DEPARTMENT_NAME
FROM
	EMPLOYEES e
JOIN DEPARTMENTS d
ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID;
	
--2. INNER JOIN을 사용하여 직원 이름, 근무기간 조회하기
SELECT
	FIRST_NAME,
	LAST_NAME,
	jh.START_DATE,
	jh.END_DATE
FROM
	EMPLOYEES e
JOIN JOB_HISTORY jh
ON
	e.EMPLOYEE_ID = jh.EMPLOYEE_ID;
	
--3. INNER JOIN을 사용하여 DEPARTMENT_ID가 100인 직원의 이름과 부서 이름 조회하기
SELECT
	e.FIRST_NAME,
	e.LAST_NAME,
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e
JOIN DEPARTMENTS d 
ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE
	d.DEPARTMENT_ID = 100;

--4. INNER JOIN을 사용하여 DEPARTMENT_ID가 80이고 ,급여가 8000 이상인 직원의 이름과 부서 이름 조회하기
SELECT
	e.FIRST_NAME,
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e
JOIN DEPARTMENTS d
ON
	e.EMPLOYEE_ID = d.DEPARTMENT_ID
WHERE
	e.DEPARTMENT_ID = 80
	AND e.SALARY >= 8000;

--5. DEPARTMENT 테이블에서 LOCATION_ID를 기준으로 조인하여 각 부서 위치가 어디인지 확인하기
SELECT
	l.STREET_ADDRESS,
	l.CITY
FROM
	DEPARTMENTS d
JOIN LOCATIONS l
ON
	d.LOCATION_ID = l.LOCATION_ID
ORDER BY l.STREET_ADDRESS;

--6. EMPLOYEES 테이블에서 직원이 작업한 이력 확인하기
SELECT
	e.EMPLOYEE_ID,
	e.FIRST_NAME,
	e.LAST_NAME,
	jh.START_DATE,
	jh.END_DATE
FROM
	EMPLOYEES e
JOIN JOB_HISTORY jh
ON
	e.EMPLOYEE_ID = jh.EMPLOYEE_ID;

--7. 직원 이름, 이메일, 직무명 조회하기
SELECT DISTINCT
	FIRST_NAME || ' ' || LAST_NAME AS "NAME",
	EMAIL,
	j.JOB_TITLE
FROM
	EMPLOYEES e
JOIN JOBS j
ON
	e.JOB_ID = j.JOB_ID;
	
--8. 직원 이름, 부서명, 직무, 근무지 조회하기
SELECT DISTINCT
	FIRST_NAME || ' ' || LAST_NAME AS "NAME",
	d.DEPARTMENT_NAME,
	j.JOB_TITLE,
	l.CITY
FROM
	EMPLOYEES e
JOIN JOBS j ON
	e.JOB_ID = j.JOB_ID
JOIN DEPARTMENTS d ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID 
JOIN LOCATIONS l ON
	l.LOCATION_ID = d.LOCATION_ID
ORDER BY NAME; 

--9. 부서 이름이 'Sales' 이거나 'Marketing' 이고, 급여가 5000 이상인 직원 이름 조회
SELECT
	FIRST_NAME || ' ' || LAST_NAME AS "NAME",
	d.DEPARTMENT_NAME,
	e.SALARY
FROM
	EMPLOYEES e
JOIN DEPARTMENTS d ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE
	d.DEPARTMENT_NAME IN ('Sales', 'Marketing')
	AND e.SALARY >= 5000;

--10. 입사일이 2005년 06월 30일 이전인 직원의 직무명 조회
SELECT
	FIRST_NAME || ' ' || LAST_NAME AS "NAME",
	j.JOB_TITLE
FROM
	JOBS j
JOIN EMPLOYEES e
ON
	j.JOB_ID = e.JOB_ID
WHERE
	e.HIRE_DATE >= '2005-06-30';

--11. 부서명이 'Shipping' 이고, 이름이 7글자 이상인 직원ID 조회
SELECT
	FIRST_NAME || ' ' || LAST_NAME AS "NAME",
	d.DEPARTMENT_NAME
FROM
	EMPLOYEES e
JOIN DEPARTMENTS d ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE
	d.DEPARTMENT_NAME = 'Shipping'
	AND e.FIRST_NAME LIKE '_______%';
	
--12. 부서별 직원 수 조회 / 부서이름, 직원 수 출력
SELECT
	d.DEPARTMENT_NAME ,
	COUNT(e.EMPLOYEE_ID)
FROM
	EMPLOYEES e
JOIN DEPARTMENTS d ON
	d.DEPARTMENT_ID = e.DEPARTMENT_ID
GROUP BY
	d.DEPARTMENT_NAME ;

--13. 부서별 직원 수 출력하되, 5명 이상인 부서만 출력
SELECT
	d.DEPARTMENT_NAME,
	count(e.EMPLOYEE_ID)
FROM
	EMPLOYEES e
JOIN DEPARTMENTS d ON
	e.DEPARTMENT_ID = d.DEPARTMENT_ID
GROUP BY
	d.DEPARTMENT_NAME
HAVING
	COUNT(e.EMPLOYEE_ID) >= 5;

--14. 직무별 평균 급여를 검색하고, 평균 급여가 가장 높은 직무의 이름과 평균 급여 출력
SELECT
	j.JOB_TITLE,
	AVG(SALARY) AS avg
FROM
	EMPLOYEES e
JOIN JOBS j ON
	j.JOB_ID = e.JOB_ID
WHERE 
	rownum <= 1
GROUP BY
	j.JOB_TITLE
ORDER BY
	AVG(SALARY) DESC


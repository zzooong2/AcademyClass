--ORDER BY: 데이터 정렬 (defalut: 오름차순(ASC))
SELECT
	*
FROM
	EMPLOYEES e
ORDER BY
	--DESC: 내림차순
	DEPARTMENT_ID DESC ;

--SELECT 그룹함수: 여러개의 행을 묶어 연산하여 결과를 반환 (MAX, MIN, SUM, AVG, COUNT)	
SELECT MAX(SALARY) FROM EMPLOYEES e;

SELECT MIN(SALARY) FROM EMPLOYEES e;

SELECT SUM(SALARY) FROM EMPLOYEES e;

SELECT AVG(SALARY) FROM EMPLOYEES e;

--SELECT COUNT(*) FROM EMPLOYEES e;
SELECT
	COUNT(EMPLOYEE_ID)
FROM
	EMPLOYEES e;


--GROUP BY: 조회된 데이터의 여러개 행을 특정 컬럼 기준으로 묶어 그룹화
--DEPARTMENT_ID(부서)별 연봉 평균 출력
SELECT
	DEPARTMENT_ID,
	AVG(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID;

--JOB_ID(직급)별 직원 평균 월급 조회
SELECT
	JOB_ID, AVG(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	JOB_ID;

--JOB_ID(직급)별 직원 평균 월급 15000이상인 데이터 조회
SELECT
	JOB_ID, AVG(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	JOB_ID
HAVING
	AVG(SALARY) >= 15000;

--JOB_ID 기준 최고 연봉이 13000 이상인 데이터 조회
SELECT
	JOB_ID,
	MAX(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	JOB_ID
HAVING
	MAX(SALARY) >= 13000;

--JOB_ID 기준 보너스를 받지 않는 데이터 조회
SELECT
	JOB_ID
FROM
	EMPLOYEES e
GROUP BY
	JOB_ID
HAVING
	COUNT(COMMISSION_PCT) = '0';

--JOB_ID 기준 가장 낮은 월급이 5000이상, 높은 월급이 10000 이하인 데이터 조회
SELECT
	MIN(SALARY),
	MAX(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	JOB_ID
HAVING
	MIN(SALARY) >= 5000
	AND MAX(SALARY) <= 10000;







------------------------------------------------------------------






--연습예제


--1. DEPARTMENT_ID가 80인 직원들의 월급 합계를 구하세요.
SELECT
	SUM(SALARY)
FROM
	EMPLOYEES e
WHERE
	DEPARTMENT_ID = 80

--2. MANAGER_ID가 149이면서 월급이 8000 이상인 직원의 수를 조회하세요.
SELECT
	COUNT(EMPLOYEE_ID)
FROM
	EMPLOYEES e
WHERE
	MANAGER_ID = 149
	AND
SALARY >= 8000

--3. JOB_ID가 IT_PROG인 직원들의 수를 구하세요.
SELECT
	COUNT(EMPLOYEE_ID)
FROM
	EMPLOYEES e
WHERE
	JOB_ID = 'IT_PROG';

--4. HIRE_DATE가 2006년 이후인 직원의 평균 월급을 구하세요.
SELECT
	ROUND(AVG(SALARY)) 
FROM
	EMPLOYEES e
WHERE
	HIRE_DATE >= '2006-01-01';
	
--5. 직원 월급 중, 가장 큰 값과 작은값을 구하세요.
SELECT
	MAX(SALARY), MIN(SALARY)
FROM
	EMPLOYEES e ;

--6. 직원 중, DEPARTMENT_ID를 기준으로 아래의 요구사항에 맞게 데이터를 조회하세요.
--6-1. 총 급여의 합
SELECT
	DEPARTMENT_ID  ,SUM(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID
ORDER BY
	DEPARTMENT_ID DESC;

--6-2. 사원의 수
SELECT
	DEPARTMENT_ID, COUNT(*)
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID
ORDER BY
	DEPARTMENT_ID DESC;	

--6-3. 보너스를 받는 사원의 수
SELECT
	DEPARTMENT_ID, COUNT(COMMISSION_PCT)
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID
ORDER BY
	DEPARTMENT_ID DESC;

--6-4. 최소 월급
SELECT
	DEPARTMENT_ID, MIN(SALARY)  
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID
ORDER BY
	DEPARTMENT_ID DESC;	

--6-5. 최대 월급
SELECT
	DEPARTMENT_ID, MAX(SALARY)  
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID
ORDER BY
	DEPARTMENT_ID DESC;

--6-6. 평균 월급
SELECT
	DEPARTMENT_ID, AVG(SALARY)  
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID
ORDER BY
	DEPARTMENT_ID DESC;

--7. EMPLOYEES 테이블에서 보너스가 있는 직원들의 정보를 모두 출력하세요.
SELECT
	*
FROM
	EMPLOYEES e
WHERE
	COMMISSION_PCT IS NOT NULL

--8. EMPLOYEES 테이블에서 월급(SALARY)이 5000 이상, 10000 이하인 직원들을 조회하세요. 단, BETWEEN을 사용하여 조회하셔야 합니다.
SELECT
	*
FROM
	EMPLOYEES e
WHERE
	SALARY 
BETWEEN 5000 AND 10000;
	
	
--9. JOBS_HISTORY 테이블에서 START_DATE가 2005-01-01 이후이고 END_DATE가 2007-01-01인 데이터를 조회하세요.
SELECT
	*
FROM
	JOB_HISTORY jh
WHERE
	START_DATE >= '2005-01-01'
	AND END_DATE <= '2007-01-01';

--10. EMPLOYEES 테이블에서 JOB_ID가 SH_CLERK, AD_ASST, MK_MAN이 아닌 직원들을 조회하세요. 단, IN을 사용하여 조회하며 오름차순으로 정렬히세요.
SELECT
	*
FROM
	EMPLOYEES e
WHERE
	JOB_ID  
NOT IN ('SH_CLERK', 'AD_ASST', 'MK_MAN')
ORDER BY
	JOB_ID DESC;
	
--11. EMPLOYEES 테이블에서 월급이 5000 이상이고, 직무가 SA_REP 또는 AD_VP인 직원들의 정보(ID, NAME, JOB_ID)를 출력하세요. 단, IN을 사용하여 조회하며 내림차순으로 정렬하세요.
SELECT
	EMPLOYEE_ID,
	FIRST_NAME || ' ' || LAST_NAME AS "NAME",
	SALARY,
	JOB_ID
FROM
	EMPLOYEES e
WHERE
	SALARY >= 5000
	AND 
JOB_ID  
IN ('SA_REP', 'AD_VP')
ORDER BY
	JOB_ID DESC;
	
--12. JOBS 테이블에서 최소 월급(MIN_SALARY)과 최대 월급(MAX_SALARY) 각각 평균을 구하여 조회하세요.
SELECT
	ROUND(AVG(MIN_SALARY)) ,
	ROUND(AVG(MAX_SALARY)) 
FROM
	JOBS j; 
	
--13. EMPLOYEES 테이블에서 JOB_ID를 기준으로 평균 월급이 7000 이상인 JOB_ID를 조회하세요.
SELECT
	JOB_ID,
FROM
	EMPLOYEES e
WHERE
	SALARY >= 7000
GROUP BY
	JOB_ID;
	
--14. EMPLOYESS 테이블에서 MANAGER_ID를 기준으로 최소 월급이 3000 이상, 최대 월급이 7000 이상인 MANAGER_ID를 출력하세요.
SELECT
	MANAGER_ID
FROM
	EMPLOYEES e
GROUP BY
	MANAGER_ID
HAVING
	MIN(SALARY) >= 3000
	AND MAX(SALARY) >= 7000;

--15. JOBS 테이블에서 JOB_ID가 SA로 시작하고, MAX_SALARY가 10000 이상인 데이터의 평균 MIN_SALARY 값을 구하여 조회하세요.
SELECT AVG(MIN_SALARY) FROM JOBS j
WHERE JOB_ID
LIKE 'SA%'
AND MAX_SALARY >= 10000

--16. LOCATION 테이블에서 COUNTRY_ID를 기준으로 STATE_PROVINCE 컬럼에 NULL이 들어가지 않은 값의 개수를 구하세요.
SELECT
	COUNTRY_ID, COUNT(STATE_PROVINCE)
FROM
	LOCATIONS l
WHERE
	STATE_PROVINCE IS NOT NULL
GROUP BY COUNTRY_ID;

--17. EMPLOYEES 테이블에서 DEPARTMENT_ID를 기준으로 부서에 직원 수가 3명 이상이고, 평균 월급이 7000 이상인 부서의 정보(DEPARTMENT_ID, 평균 월급) 출력하세요
SELECT
	DEPARTMENT_ID,
	AVG(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID
HAVING
	COUNT(EMPLOYEE_ID) >= 3
	AND AVG(SALARY) >= 7000 

	











